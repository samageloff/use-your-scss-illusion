// Mixins
@mixin animation ($animation-name, $animation-duration, $animation-timing, $animation-iteration) {
  -webkit-animation: $animation-name $animation-duration $animation-timing $animation-iteration;
     -moz-animation: $animation-name $animation-duration $animation-timing $animation-iteration;
          animation: $animation-name $animation-duration $animation-timing $animation-iteration;
}

@mixin keyframe ($animation-name) {
  @-webkit-keyframes $animation-name {
    @content;
  }
  @-moz-keyframes $animation-name {
    @content;
  }
  @keyframes $animation-name {
    @content;
  }
}

// Variables
$color-magenta: #EF227F;
$color-twilight: #1C1B29;

$border-radius: 50%;
$dot-size: 10px;

$diameter: 800px;
$semicircle: 180;
$number-of-lines: 85;
$degree-of-rotation: $semicircle / $number-of-lines;

$animation-name: move-balls;
$animation-duration: 2s;
$animation-timing: linear; /* linear, ease-in, ease-out, ease-in-out, cubic-bezier(n,n,n,n) */
$animation-iteration: infinite;

body {
  background-color: #FFF;
  margin-top: 2em;
}

.circle {
  background-color: $color-twilight;
  border-radius: $border-radius;
  height: $diameter;
  margin: 0 auto;
  position: relative;
  width: $diameter;
}

.line {
  bottom: 0;
  border: 1px solid rgba($color-magenta, 0);
  left: 50%;
  position: absolute;
  top: 0;
  transition: border 250ms ease-in-out;
}

.circle:hover .line,
.circle.active .line {
  border: 1px solid rgba($color-magenta, .5);
}

.line::after {
  @include animation($animation-name, $animation-duration, $animation-timing, $animation-iteration);
  background: $color-magenta;
  border-radius: $border-radius;
  content: '';
  left: - $dot-size / 2;
  position: absolute;
  height: $dot-size;
  top: 0;
  width: $dot-size;
  -webkit-transform: translate3d(0, 0, 0);
}

@for $i from 1 through $number-of-lines {
  .line:nth-child(#{$i}) {
    transform: rotate($degree-of-rotation * $i + deg)
  }
}

@for $i from 1 through $number-of-lines {
  .line:nth-child(#{$i})::after {
    animation-delay: ($i / $number-of-lines * $animation-duration) / 2;
  }
}

@include keyframe($animation-name) {
  50% {
    transform: translate(0, $diameter - $dot-size);
  }
}